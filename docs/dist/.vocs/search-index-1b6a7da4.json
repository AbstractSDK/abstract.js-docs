{"documentCount":40,"nextId":40,"documentIds":{"0":"docs/pages/getting-started.mdx#get-started","1":"docs/pages/getting-started.mdx#overview","2":"docs/pages/getting-started.mdx#installation","3":"docs/pages/getting-started.mdx#quick-start","4":"docs/pages/getting-started.mdx#1-set-up-your-abstract-config--client-provider","5":"docs/pages/getting-started.mdx#2-provide-the-abstract-config-to-abstract-provider","6":"docs/pages/getting-started.mdx#3-setup-tanstack-query","7":"docs/pages/getting-started.mdx#4-wrap-with-your-providers-context","8":"docs/pages/getting-started.mdx#5-use-abstract-js-hooks","9":"docs/pages/introduction.mdx#why-abstractjs","10":"docs/pages/introduction.mdx#general","11":"docs/pages/introduction.mdx#links","12":"docs/pages/cli/introduction.mdx#abstract-moneycli","13":"docs/pages/cli/introduction.mdx#installation","14":"docs/pages/cli/introduction.mdx#usage","15":"docs/pages/cli/introduction.mdx#init","16":"docs/pages/cli/introduction.mdx#generate","17":"docs/pages/core/introduction.mdx#abstract-moneycore","18":"docs/pages/core/introduction.mdx#installation","19":"docs/pages/core/introduction.mdx#usage","20":"docs/pages/hooks/parameter-extra-snippet.mdx#extra","21":"docs/pages/hooks/parameter-mutation-snippet.mdx#mutation","22":"docs/pages/hooks/parameter-query-common-snippet.mdx#chainname","23":"docs/pages/hooks/parameter-query-snippet.mdx#query","24":"docs/pages/miscellaneous/running-abstract-api.mdx#running-abstract-api","25":"docs/pages/miscellaneous/running-abstract-api.mdx#example","26":"docs/pages/hooks/wallet/parameter-extra-snippet.mdx#extra","27":"docs/pages/hooks/public/parameter-common-snippet.mdx#chainname","28":"docs/pages/hooks/public/parameter-extra-snippet.mdx#extra","29":"docs/pages/hooks/account/public/parameter-common-snippet.mdx#accountid","30":"docs/pages/hooks/account/public/parameter-common-snippet.mdx#chainname","31":"docs/pages/hooks/account/public/parameter-extra-snippet.mdx#extra","32":"docs/pages/hooks/account/wallet/mutation-parameters-snippet.mdx#fee","33":"docs/pages/hooks/account/wallet/mutation-parameters-snippet.mdx#funds-optional","34":"docs/pages/hooks/account/wallet/mutation-parameters-snippet.mdx#memo-optional","35":"docs/pages/hooks/account/wallet/parameter-common-snippet.mdx#accountid","36":"docs/pages/hooks/account/wallet/parameter-common-snippet.mdx#chainname","37":"docs/pages/hooks/account/wallet/parameter-extra-snippet.mdx#extra","38":"docs/pages/react/providers/graz.mdx#graz-provider","39":"docs/pages/react/providers/xion.mdx#xion-provider"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,12],"1":[1,2,61],"2":[1,2,24],"3":[2,2,1],"4":[9,4,26],"5":[7,4,42],"6":[4,4,101],"7":[8,4,67],"8":[5,4,55],"9":[3,1,1],"10":[1,3,43],"11":[1,3,11],"12":[4,1,41],"13":[1,4,10],"14":[1,4,6],"15":[1,4,81],"16":[1,4,45],"17":[4,1,37],"18":[1,4,10],"19":[1,4,22],"20":[1,1,11],"21":[1,1,6],"22":[1,1,13],"23":[1,1,6],"24":[3,1,98],"25":[1,4,67],"26":[1,1,14],"27":[1,1,13],"28":[1,1,13],"29":[1,1,12],"30":[1,1,13],"31":[1,1,15],"32":[1,1,10],"33":[3,1,8],"34":[3,1,5],"35":[1,1,12],"36":[1,1,13],"37":[1,1,16],"38":[2,1,56],"39":[2,1,77]},"averageFieldLength":[2.15,2.075,29.350000000000005],"storedFields":{"0":{"href":"/getting-started#get-started","html":"<div role=\"doc-subtitle\">Get started with Abstract SDK with just a few lines of code.</div></header>\n","isPage":true,"text":"Get started with Abstract SDK with just a few lines of code.\n","title":"Get started","titles":[]},"1":{"href":"/getting-started#overview","html":"\n<p>abstract.js is a TypeScript interface for Abstract apps that provides low-level stateless primitives for interacting with Abstract.\nabstract.js is focused on developer experience, bundle size, and performance:</p>\n<ul>\n<li><strong>Developer experience</strong> Automatic type safety and inference, comprehensive documentation, composable APIs.</li>\n<li><strong>Bundle size</strong> Tree-shakable lightweight modules.</li>\n<li><strong>Performance Optimized</strong> encoding/parsing, async tasks only when necessary.\nYou can learn more about the rationale behind the project in the <a href=\"/introduction\">Why abstract.js</a> section.</li>\n</ul>\n","isPage":false,"text":"\nabstract.js is a TypeScript interface for Abstract apps that provides low-level stateless primitives for interacting with Abstract.\nabstract.js is focused on developer experience, bundle size, and performance:\n\nDeveloper experience Automatic type safety and inference, comprehensive documentation, composable APIs.\nBundle size Tree-shakable lightweight modules.\nPerformance Optimized encoding/parsing, async tasks only when necessary.\nYou can learn more about the rationale behind the project in the Why abstract.js section.\n\n","title":"Overview","titles":["Get started"]},"2":{"href":"/getting-started#installation","html":"\n<p>Using <a href=\"https://cosmoskit.com\">CosmosKit</a>:</p>\n<div class=\"code-group\"><div data-title=\"npm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"npm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> i</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/react</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/provider-cosmoskit</span></span></code></pre></div><div data-title=\"yarn\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"yarn\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">yarn</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/react</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/provider-cosmoskit</span></span></code></pre></div><div data-title=\"pnpm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"pnpm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">pnpm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/react</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/provider-cosmoskit</span></span></code></pre></div><div data-title=\"bun\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"bun\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bun</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/react</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/provider-cosmoskit</span></span></code></pre></div></div>\n<p>Using <a href=\"https://graz.sh\">graz</a>:</p>\n<div class=\"code-group\"><div data-title=\"npm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"npm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> i</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/react</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/provider-graz</span></span></code></pre></div><div data-title=\"yarn\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"yarn\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">yarn</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/react</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/provider-graz</span></span></code></pre></div><div data-title=\"pnpm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"pnpm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">pnpm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/react</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/provider-graz</span></span></code></pre></div><div data-title=\"bun\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"bun\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bun</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/react</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/provider-graz</span></span></code></pre></div></div>\n<p>Using <a href=\"https://www.npmjs.com/package/@burnt-labs/abstraxion\">XION abstraxion</a>:</p>\n<div class=\"code-group\"><div data-title=\"npm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"npm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> i</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/react</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/provider-xion</span></span></code></pre></div><div data-title=\"yarn\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"yarn\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">yarn</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/react</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/provider-xion</span></span></code></pre></div><div data-title=\"pnpm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"pnpm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">pnpm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/react</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/provider-xion</span></span></code></pre></div><div data-title=\"bun\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"bun\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bun</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/react</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/provider-xion</span></span></code></pre></div></div>\n","isPage":false,"text":"\nUsing CosmosKit:\nnpm i @abstract-money/react @abstract-money/provider-cosmoskityarn add @abstract-money/react @abstract-money/provider-cosmoskitpnpm add @abstract-money/react @abstract-money/provider-cosmoskitbun add @abstract-money/react @abstract-money/provider-cosmoskit\nUsing graz:\nnpm i @abstract-money/react @abstract-money/provider-grazyarn add @abstract-money/react @abstract-money/provider-grazpnpm add @abstract-money/react @abstract-money/provider-grazbun add @abstract-money/react @abstract-money/provider-graz\nUsing XION abstraxion:\nnpm i @abstract-money/react @abstract-money/provider-xionyarn add @abstract-money/react @abstract-money/provider-xionpnpm add @abstract-money/react @abstract-money/provider-xionbun add @abstract-money/react @abstract-money/provider-xion\n","title":"Installation","titles":["Get started"]},"3":{"href":"/getting-started#quick-start","html":"\n<div data-vocs-steps=\"true\"><div data-depth=\"3\">","isPage":false,"text":"\n","title":"Quick Start","titles":["Get started"]},"4":{"href":"/getting-started#1-set-up-your-abstract-config--client-provider","html":"<p>Firstly, set up your Abstract config with a desired provider.</p><pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { createConfig } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/react&#x27;</span></span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { grazProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/provider-graz&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  apiUrl: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;https://api.abstract.money/graphql&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  provider: grazProvider </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}) </span></span></code></pre></div><div data-depth=\"3\">","isPage":false,"text":"Firstly, set up your Abstract config with a desired provider.import { createConfig } from &#x27;@abstract-money/react&#x27;\nimport { grazProvider } from &#x27;@abstract-money/provider-graz&#x27;\n \nconst config = createConfig({ \n  apiUrl: &#x27;https://api.abstract.money/graphql&#x27;, \n  provider: grazProvider \n}) ","title":"1. Set up your Abstract Config &amp; Client Provider","titles":["Get started","Quick Start"]},"5":{"href":"/getting-started#2-provide-the-abstract-config-to-abstract-provider","html":"<p>Wrap your app in the <code>AbstractProvider</code> React Context Provider and pass the <code>config</code> you created earlier to the <code>config</code> property.</p><pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { createConfig, AbstractProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/react&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { grazProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/provider-graz&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  apiUrl: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;https://testnet.api.abstract.money/graphql&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  provider: grazProvider</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> App</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() { </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">AbstractProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#F47067\">      {</span><span style=\"color:#6A737D;--shiki-dark:#768390\">/*...*/</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">AbstractProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  ) </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">} </span></span></code></pre></div><div data-depth=\"3\">","isPage":false,"text":"Wrap your app in the AbstractProvider React Context Provider and pass the config you created earlier to the config property.import { createConfig, AbstractProvider } from &#x27;@abstract-money/react&#x27;\nimport { grazProvider } from &#x27;@abstract-money/provider-graz&#x27;\n \nconst config = createConfig({\n  apiUrl: &#x27;https://testnet.api.abstract.money/graphql&#x27;,\n  provider: grazProvider\n})\n \nexport function App() { \n  return (\n    &lt;AbstractProvider config={config}&gt;\n      {/*...*/}\n    &lt;/AbstractProvider&gt; \n  ) \n} ","title":"2. Provide the Abstract Config to Abstract Provider","titles":["Get started","Quick Start"]},"6":{"href":"/getting-started#3-setup-tanstack-query","html":"<aside data-callout=\"info\"><p>If you are using <code>graz</code>, you can skip this step as <a href=\"https://graz.sh\">graz</a> already provides a <code>QueryClient</code> instance which <code>AbstractProvider</code> uses. See the <a href=\"./react/providers/graz.mdx\">example with graz</a>.</p></aside><ol>\n<li>Install <code>@tanstack/react-query@^4</code>.</li>\n</ol><aside data-callout=\"warning\"><p>Since the CLI relies on <a href=\"https://github.com/CosmWasm/ts-codegen\">ts-codegen</a>, it is required to install only the 4th major version of TanStack React Query,\nas other versions are not supported yet.</p></aside><div class=\"code-group\"><div data-title=\"npm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"npm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> i</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @tanstack/react-query@^4</span></span></code></pre></div><div data-title=\"yarn\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"yarn\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">yarn</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @tanstack/react-query@^4</span></span></code></pre></div><div data-title=\"pnpm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"pnpm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">pnpm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @tanstack/react-query@^4</span></span></code></pre></div><div data-title=\"bun\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"bun\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bun</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @tanstack/react-query@^4</span></span></code></pre></div></div><ol start=\"2\">\n<li>Next, outside the <code>AbstractProvider</code>, wrap your <code>AbstractProvider</code> with <code>QueryClientProvider</code> and pass a new <code>QueryClient</code> instance to the client property.</li>\n</ol><pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { QueryClient, QueryClientProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@tanstack/react-query&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { createConfig, AbstractProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/react&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { cosmosKitProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/provider-cosmoskit&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  apiUrl: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;https://testnet.api.abstract.money/graphql&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  provider: cosmosKitProvider</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> QueryClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> App</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">AbstractProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#F47067\">        {</span><span style=\"color:#6A737D;--shiki-dark:#768390\">/*...*/</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">AbstractProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre><ol start=\"3\">\n<li>Check out the <a href=\"https://tanstack.com/query/v4/docs/framework/react/overview\">TanStack Query docs</a> to learn about the library, APIs, and more.</li>\n</ol></div><div data-depth=\"3\">","isPage":false,"text":"If you are using graz, you can skip this step as graz already provides a QueryClient instance which AbstractProvider uses. See the example with graz.\nInstall @tanstack/react-query@^4.\nSince the CLI relies on ts-codegen, it is required to install only the 4th major version of TanStack React Query,\nas other versions are not supported yet.npm i @tanstack/react-query@^4yarn add @tanstack/react-query@^4pnpm add @tanstack/react-query@^4bun add @tanstack/react-query@^4\nNext, outside the AbstractProvider, wrap your AbstractProvider with QueryClientProvider and pass a new QueryClient instance to the client property.\nimport { QueryClient, QueryClientProvider } from &#x27;@tanstack/react-query&#x27;\nimport { createConfig, AbstractProvider } from &#x27;@abstract-money/react&#x27;\nimport { cosmosKitProvider } from &#x27;@abstract-money/provider-cosmoskit&#x27;\n \nconst config = createConfig({\n  apiUrl: &#x27;https://testnet.api.abstract.money/graphql&#x27;,\n  provider: cosmosKitProvider\n})\n \nconst client = new QueryClient() \n \nexport function App() {\n  return (\n    &lt;QueryClientProvider client={client}&gt;\n      &lt;AbstractProvider config={config}&gt;\n        {/*...*/}\n      &lt;/AbstractProvider&gt;\n    &lt;/QueryClientProvider&gt; \n  )\n}\nCheck out the TanStack Query docs to learn about the library, APIs, and more.\n","title":"3. Setup Tanstack Query","titles":["Get started","Quick Start"]},"7":{"href":"/getting-started#4-wrap-with-your-providers-context","html":"<p>Next, you should wrap these contexts with your provider-specific context. For example, if you are using <code>cosmos-kit</code>, you should wrap the <code>AbstractProvider</code> with the <code>ChainProvider</code>.</p><p>Other examples:</p><ul>\n<li><a href=\"./react/providers/graz.mdx\">Graz Provider</a></li>\n<li><a href=\"./react/providers/xion.mdx\">XION Provider</a></li>\n</ul><pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { QueryClient, QueryClientProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@tanstack/react-query&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { ChainProvider, defaultModalViews } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;@cosmos-kit/react&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { wallets </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">as</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> keplrWallets } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;@cosmos-kit/keplr&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { createConfig, AbstractProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/react&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { cosmosKitProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/provider-cosmoskit&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  apiUrl: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;https://testnet.api.abstract.money/graphql&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  provider: cosmosKitProvider</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> QueryClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> App</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">ChainProvider</span></span>\n<span class=\"line focused\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">      chains</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;cosmoshub&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line focused\"><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\">      wallets</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[  </span></span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        ...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">keplrWallets,  </span></span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        /*...*/</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      ]</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">AbstractProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#F47067\">          {</span><span style=\"color:#6A737D;--shiki-dark:#768390\">/*...*/</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">AbstractProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">ChainProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre></div><div data-depth=\"3\">","isPage":false,"text":"Next, you should wrap these contexts with your provider-specific context. For example, if you are using cosmos-kit, you should wrap the AbstractProvider with the ChainProvider.Other examples:\nGraz Provider\nXION Provider\nimport { QueryClient, QueryClientProvider } from &#x27;@tanstack/react-query&#x27;\nimport { ChainProvider, defaultModalViews } from &quot;@cosmos-kit/react&quot;;\nimport { wallets as keplrWallets } from &quot;@cosmos-kit/keplr&quot;;\nimport { createConfig, AbstractProvider } from &#x27;@abstract-money/react&#x27;\nimport { cosmosKitProvider } from &#x27;@abstract-money/provider-cosmoskit&#x27;\n \nconst config = createConfig({\n  apiUrl: &#x27;https://testnet.api.abstract.money/graphql&#x27;,\n  provider: cosmosKitProvider\n})\n \nconst client = new QueryClient() \n \nexport function App() {\n  return (\n    &lt;ChainProvider\n      chains={[&quot;cosmoshub&quot;]}\n      wallets={[  \n        ...keplrWallets,  \n        /*...*/\n      ]}\n    &gt;\n      &lt;QueryClientProvider client={client}&gt;\n        &lt;AbstractProvider config={config}&gt;\n          {/*...*/}\n        &lt;/AbstractProvider&gt;\n      &lt;/QueryClientProvider&gt;\n    &lt;/ChainProvider&gt; \n  )\n}","title":"4. Wrap with your provider&#x27;s context","titles":["Get started","Quick Start"]},"8":{"href":"/getting-started#5-use-abstract-js-hooks","html":"<p>Now that everything is set up, every component inside the Abstract and TanStack Query Providers can use Abstract React Hooks.</p><pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { accountIdToString } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/core&#x27;</span></span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useAccounts } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/react&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> owner</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `...`</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> default</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> Page</span><span style=\"color:#24292E;--shiki-dark:#F69D50\">() </span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> accountsQuery</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useAccounts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    args: { </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      chains: [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;osmosis&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      owner, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }) </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (accountsQuery.isLoading) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> &lt;&gt;Loading&lt;/&gt;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (accountsQuery.isError) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> &lt;&gt;Error =(&lt;/&gt;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> accountsQuery.data.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">account</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">i</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> &lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">p</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> key</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">i</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">accountIdToString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(account)</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">p</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre></div></div>","isPage":false,"text":"Now that everything is set up, every component inside the Abstract and TanStack Query Providers can use Abstract React Hooks.import { accountIdToString } from &#x27;@abstract-money/core&#x27;\nimport { useAccounts } from &#x27;@abstract-money/react&#x27;\n \nconst owner = `...`\n \nexport default function Page() {\n  const accountsQuery = useAccounts({ \n    args: { \n      chains: [&#x27;osmosis&#x27;], \n      owner, \n    } \n  }) \n \n  if (accountsQuery.isLoading) return &lt;&gt;Loading&lt;/&gt;\n  if (accountsQuery.isError) return &lt;&gt;Error =(&lt;/&gt;\n  return accountsQuery.data.map(\n    (account, i) =&gt; &lt;p key={i}&gt;{accountIdToString(account)}&lt;/p&gt;\n  )\n}","title":"5. Use Abstract JS hooks","titles":["Get started","Quick Start"]},"9":{"href":"/introduction#why-abstractjs","html":"</header>\n","isPage":true,"text":"\n","title":"Why abstract.js","titles":[]},"10":{"href":"/introduction#general","html":"\n<p>Abstract is an account-based smart-contract development and distribution platform.\nOur platform and tooling allow developers to build and scale their applications in a chain-agnostic manner.</p>\n<aside data-callout=\"info\"><ul>\n<li>Want a TL;DR? Read a <a href=\"https://medium.com/abstract-money/a-high-level-overview-of-abstract-moneys-interchain-app-platform-d30813c7a1b4\">high-level overview on the Abstract Platform</a>.</li>\n<li>Prefer to watch? Check out our <a href=\"https://docs.abstract.money/video_and_content/videos.html\">video library</a>.</li>\n</ul></aside>\n","isPage":false,"text":"\nAbstract is an account-based smart-contract development and distribution platform.\nOur platform and tooling allow developers to build and scale their applications in a chain-agnostic manner.\n\nWant a TL;DR? Read a high-level overview on the Abstract Platform.\nPrefer to watch? Check out our video library.\n\n","title":"General","titles":["Why abstract.js"]},"11":{"href":"/introduction#links","html":"\n<ul>\n<li><a href=\"https://abstract.money/\">Website</a></li>\n<li><a href=\"https://github.com/AbstractSDK\">Github</a></li>\n<li><a href=\"https://medium.com/@abstractmoney\">Medium</a></li>\n<li><a href=\"https://console.abstract.money/\">Account Console</a></li>\n<li><a href=\"https://docs.abstract.money/\">Abstract Smart Contract SDK documentation</a></li>\n</ul>","isPage":false,"text":"\n\nWebsite\nGithub\nMedium\nAccount Console\nAbstract Smart Contract SDK documentation\n","title":"Links","titles":["Why abstract.js"]},"12":{"href":"/cli/introduction#abstract-moneycli","html":"<div role=\"doc-subtitle\">One command to rule them all!</div></header>\n<p>The Abstract CLI is a command-line tool for generating JavaScript bindings to contracts that use Abstract.</p>\n<aside data-callout=\"info\"><p>If you have <code>tsconfig.json</code> in your project, it will generate TypeScript typings too!</p></aside>\n<aside data-callout=\"warning\"><p>The CLI package relies hardly on <a href=\"https://github.com/CosmWasm/ts-codegen\">ts-codegen</a>.</p></aside>\n","isPage":true,"text":"One command to rule them all!\nThe Abstract CLI is a command-line tool for generating JavaScript bindings to contracts that use Abstract.\nIf you have tsconfig.json in your project, it will generate TypeScript typings too!\nThe CLI package relies hardly on ts-codegen.\n","title":"@abstract-money/cli","titles":[]},"13":{"href":"/cli/introduction#installation","html":"\n<div class=\"code-group\"><div data-title=\"npm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"npm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> i</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/cli</span></span></code></pre></div><div data-title=\"yarn\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"yarn\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">yarn</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/cli</span></span></code></pre></div><div data-title=\"pnpm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"pnpm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">pnpm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/cli</span></span></code></pre></div><div data-title=\"bun\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"bun\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bun</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/cli</span></span></code></pre></div></div>\n","isPage":false,"text":"\nnpm i @abstract-money/cliyarn add @abstract-money/clipnpm add @abstract-money/clibun add @abstract-money/cli\n","title":"Installation","titles":["@abstract-money/cli"]},"14":{"href":"/cli/introduction#usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">abstract</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">comman</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">d</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [options]</span></span></code></pre>\n","isPage":false,"text":"\nabstract &lt;command&gt; [options]\n","title":"Usage","titles":["@abstract-money/cli"]},"15":{"href":"/cli/introduction#init","html":"\n<p>Once you have installed the CLI, you have to define CLI config at <code>abstract.config.ts</code>.\nYou can generate a default one, using the command:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">abstract</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> init</span></span></code></pre>\n<p>This will generate an <code>abstract.config.ts</code> in your project root. You can configure accordingly.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { defineConfig } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/cli&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { react, registry } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/cli/plugins&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> default</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> defineConfig</span><span style=\"color:#24292E;--shiki-dark:#F69D50\">({</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">  // Target directory for generated files.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  out: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;./src/generated&#x27;</span><span style=\"color:#24292E;--shiki-dark:#F69D50\">,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">  // List of plugins to use.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  plugins: [</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Generate React hooks.</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    react</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Pull contract schemas from the registry at https://github.com/AbstractSDK/schemas</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    registry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      contracts: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;app-name&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Your App Name.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          namespace: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;abstract&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// To claim a namespace on mainnet, please get in touch with Abstract Team.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          version: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0.1.0&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      ],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  ]</span><span style=\"color:#24292E;--shiki-dark:#F69D50\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#F69D50\">})</span></span></code></pre>\n","isPage":false,"text":"\nOnce you have installed the CLI, you have to define CLI config at abstract.config.ts.\nYou can generate a default one, using the command:\nabstract init\nThis will generate an abstract.config.ts in your project root. You can configure accordingly.\nimport { defineConfig } from &#x27;@abstract-money/cli&#x27;\nimport { react, registry } from &#x27;@abstract-money/cli/plugins&#x27;\n \nexport default defineConfig({\n  // Target directory for generated files.\n  out: &#x27;./src/generated&#x27;,\n  // List of plugins to use.\n  plugins: [\n    // Generate React hooks.\n    react(),\n    // Pull contract schemas from the registry at https://github.com/AbstractSDK/schemas\n    registry({\n      contracts: [\n        {\n          name: &#x27;app-name&#x27;, // Your App Name.\n          namespace: &#x27;abstract&#x27;, // To claim a namespace on mainnet, please get in touch with Abstract Team.\n          version: &#x27;0.1.0&#x27;,\n        },\n      ],\n    }),\n  ],\n})\n","title":"Init","titles":["@abstract-money/cli"]},"16":{"href":"/cli/introduction#generate","html":"\n<p>Once done, you&#x27;re ready to generate the code:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">abstract</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> generate</span></span></code></pre>\n<p>You can use additional options as mentioned above.\nYou should get an output like:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">❯</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> abstract</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> generate</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">✔</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> Validating</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> plugins</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">✔</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> Resolving</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> contracts</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">✔</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> Validating</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> contracts</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">✔</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> Running</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> plugins</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">✔</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> Writing</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> src/generated/index.ts</span></span></code></pre>\n<p>And you should be all set to use the types generated directly into your codebase.</p>","isPage":false,"text":"\nOnce done, you&#x27;re ready to generate the code:\nabstract generate\nYou can use additional options as mentioned above.\nYou should get an output like:\n❯ abstract generate\n✔ Validating plugins\n✔ Resolving contracts\n✔ Validating contracts\n✔ Running plugins\n✔ Writing to src/generated/index.ts\nAnd you should be all set to use the types generated directly into your codebase.","title":"Generate","titles":["@abstract-money/cli"]},"17":{"href":"/core/introduction#abstract-moneycore","html":"<div role=\"doc-subtitle\">VanillaJS library for interacting with Abstract Apps.</div></header>\n<p>The Abstract Core is a VanillaJS library for interacting with Abstract Apps.\nIt allows you to interact with Abstract Apps in Node.JS, or to create your own React library on top of it if you&#x27;re not willing to use <a href=\"/getting-started\">our React package</a>.</p>\n","isPage":true,"text":"VanillaJS library for interacting with Abstract Apps.\nThe Abstract Core is a VanillaJS library for interacting with Abstract Apps.\nIt allows you to interact with Abstract Apps in Node.JS, or to create your own React library on top of it if you&#x27;re not willing to use our React package.\n","title":"@abstract-money/core","titles":[]},"18":{"href":"/core/introduction#installation","html":"\n<div class=\"code-group\"><div data-title=\"npm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"npm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> i</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/core</span></span></code></pre></div><div data-title=\"yarn\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"yarn\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">yarn</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/core</span></span></code></pre></div><div data-title=\"pnpm\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"pnpm\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">pnpm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/core</span></span></code></pre></div><div data-title=\"bun\"><pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\" data-title=\"bun\" data-lang=\"bash\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">bun</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @abstract-money/core</span></span></code></pre></div></div>\n","isPage":false,"text":"\nnpm i @abstract-money/coreyarn add @abstract-money/corepnpm add @abstract-money/corebun add @abstract-money/core\n","title":"Installation","titles":["@abstract-money/core"]},"19":{"href":"/core/introduction#usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { createApiClient } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/core&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createApiClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ apiUrl: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;https://api.abstract.money&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> accounts</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getAccountsByOwnerFromApi</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  owner: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;...&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chains: [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;osmosis&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(accounts)</span></span></code></pre>","isPage":false,"text":"\nimport { createApiClient } from &#x27;@abstract-money/core&#x27;\n \nconst client = createApiClient({ apiUrl: &#x27;https://api.abstract.money&#x27; })\n \nconst accounts = await client.getAccountsByOwnerFromApi({\n  owner: &#x27;...&#x27;,\n  chains: [&#x27;osmosis&#x27;],\n})\n \nconsole.log(accounts)","title":"Usage","titles":["@abstract-money/core"]},"20":{"href":"/hooks/parameter-extra-snippet#extra","html":"\n<p><code>{ apiUrl?: string | undefined; } | undefined</code></p>\n<p>Extra options to override decorated parameters.</p>","isPage":true,"text":"\n{ apiUrl?: string | undefined; } | undefined\nExtra options to override decorated parameters.","title":"extra","titles":[null,null]},"21":{"href":"/hooks/parameter-mutation-snippet#mutation","html":"\n<p><code>MutationOptions | undefined</code></p>\n<p><a href=\"https://tanstack.com/query/v4/docs/framework/react/reference/useMutation\"><code>MutationOptions</code></a> to use.</p>","isPage":true,"text":"\nMutationOptions | undefined\nMutationOptions to use.","title":"mutation","titles":[null,null]},"22":{"href":"/hooks/parameter-query-common-snippet#chainname","html":"\n<p><code>string | undefined</code></p>\n<p>Name of the chain to be used to fetch the query.</p>","isPage":true,"text":"\nstring | undefined\nName of the chain to be used to fetch the query.","title":"chainName","titles":[null,null]},"23":{"href":"/hooks/parameter-query-snippet#query","html":"\n<p><code>QueryOptions | undefined</code></p>\n<p><a href=\"https://tanstack.com/query/v4/docs/framework/react/reference/useQuery\"><code>QueryOptions</code></a> to use.</p>","isPage":true,"text":"\nQueryOptions | undefined\nQueryOptions to use.","title":"query","titles":[null,null]},"24":{"href":"/miscellaneous/running-abstract-api#running-abstract-api","html":"</header>\n<p>This guide describes how to run the Abstract API using Docker and how to configure it with custom network settings.</p>\n<p>First, prepare the network configurations you plan to use with the API instance. The configuration should follow this schema:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;chainId&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;rpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;versionControl&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>Here, <code>chainId</code> is a placeholder for the actual chain ID, which will include the following properties:</p>\n<ul>\n<li><strong>rpc</strong>: The URL of the network&#x27;s RPC endpoint.</li>\n<li><strong>versionControl</strong>: The address of the Version Control contract deployed on that network.</li>\n</ul>\n<p>For example:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;phoenix-1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;rpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://rpc-proxy.abstract-os.workers.dev/phoenix-1/rpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;versionControl&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;terra1hstp8gfjlg2reet90mgada3h8n9jf2d7tnd9r554h0d0q95lgq5q2fhp8v&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>Once you have the network configuration prepared, pass it as an environment variable to the Docker instance. Use the following command:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> abstractsdk/subgraph:0.19</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -e</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> NETWORK_CONFIGURATION_MAP=&#x27;&lt;prepared_json&gt;&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -p</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 4001:4001</span></span></code></pre>\n","isPage":true,"text":"\nThis guide describes how to run the Abstract API using Docker and how to configure it with custom network settings.\nFirst, prepare the network configurations you plan to use with the API instance. The configuration should follow this schema:\n{\n  &quot;chainId&quot;: {\n    &quot;rpc&quot;: &quot;string&quot;,\n    &quot;versionControl&quot;: &quot;string&quot;\n  }\n}\nHere, chainId is a placeholder for the actual chain ID, which will include the following properties:\n\nrpc: The URL of the network&#x27;s RPC endpoint.\nversionControl: The address of the Version Control contract deployed on that network.\n\nFor example:\n{\n  &quot;phoenix-1&quot;: {\n    &quot;rpc&quot;: &quot;https://rpc-proxy.abstract-os.workers.dev/phoenix-1/rpc&quot;,\n    &quot;versionControl&quot;: &quot;terra1hstp8gfjlg2reet90mgada3h8n9jf2d7tnd9r554h0d0q95lgq5q2fhp8v&quot;\n  }\n}\nOnce you have the network configuration prepared, pass it as an environment variable to the Docker instance. Use the following command:\ndocker run abstractsdk/subgraph:0.19 -e NETWORK_CONFIGURATION_MAP=&#x27;&lt;prepared_json&gt;&#x27; -p 4001:4001\n","title":"Running Abstract API","titles":[]},"25":{"href":"/miscellaneous/running-abstract-api#example","html":"\n<p>To run the API with the example network configuration provided above, the command would be:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> abstractsdk/subgraph:0.19</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -e</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> NETWORK_CONFIGURATION_MAP=&#x27;{&quot;phoenix-1&quot;:{&quot;rpc&quot;:&quot;https://rpc-proxy.abstract-os.workers.dev/phoenix-1/rpc&quot;,&quot;versionControl&quot;:&quot;terra1hstp8gfjlg2reet90mgada3h8n9jf2d7tnd9r554h0d0q95lgq5q2fhp8v&quot;}}&#x27;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -p</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> 4001:4001</span></span></code></pre>\n<p>In this command:</p>\n<ul>\n<li><code>abstractsdk/subgraph:0.19</code> specifies the Docker image to use.</li>\n<li><code>-e NETWORK_CONFIGURATION_MAP=&#x27;...&#x27;</code> passes the network configuration as an environment variable.</li>\n<li><code>-p 4001:4001</code> maps port 4001 on your local machine to port 4001 in the Docker container.</li>\n</ul>\n<p>After running this command, the API will be served and accessible at <code>http://localhost:4001</code>.</p>","isPage":false,"text":"\nTo run the API with the example network configuration provided above, the command would be:\ndocker run abstractsdk/subgraph:0.19 -e NETWORK_CONFIGURATION_MAP=&#x27;{&quot;phoenix-1&quot;:{&quot;rpc&quot;:&quot;https://rpc-proxy.abstract-os.workers.dev/phoenix-1/rpc&quot;,&quot;versionControl&quot;:&quot;terra1hstp8gfjlg2reet90mgada3h8n9jf2d7tnd9r554h0d0q95lgq5q2fhp8v&quot;}}&#x27; -p 4001:4001\nIn this command:\n\nabstractsdk/subgraph:0.19 specifies the Docker image to use.\n-e NETWORK_CONFIGURATION_MAP=&#x27;...&#x27; passes the network configuration as an environment variable.\n-p 4001:4001 maps port 4001 on your local machine to port 4001 in the Docker container.\n\nAfter running this command, the API will be served and accessible at http://localhost:4001.","title":"Example","titles":["Running Abstract API",null]},"26":{"href":"/hooks/wallet/parameter-extra-snippet#extra","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>{</span></span>\n<span class=\"line\"><span>    apiUrl?: string | undefined;</span></span>\n<span class=\"line\"><span>    signingCosmWasmClient?: SigningCosmWasmClient | undefined;</span></span>\n<span class=\"line\"><span>    sender: string | undefined;</span></span>\n<span class=\"line\"><span>} | undefined</span></span></code></pre>\n<p>Extra options to override decorated parameters.</p>","isPage":true,"text":"\n{\n    apiUrl?: string | undefined;\n    signingCosmWasmClient?: SigningCosmWasmClient | undefined;\n    sender: string | undefined;\n} | undefined\nExtra options to override decorated parameters.","title":"extra","titles":[null,null]},"27":{"href":"/hooks/public/parameter-common-snippet#chainname","html":"\n<p><code>string | undefined</code></p>\n<p>Name of the chain to be used to fetch the query.</p>","isPage":true,"text":"\nstring | undefined\nName of the chain to be used to fetch the query.","title":"chainName","titles":[null,null]},"28":{"href":"/hooks/public/parameter-extra-snippet#extra","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>{</span></span>\n<span class=\"line\"><span>    apiUrl?: string | undefined;</span></span>\n<span class=\"line\"><span>    cosmWasmClient?: CosmWasmClient | undefined;</span></span>\n<span class=\"line\"><span>} | undefined</span></span></code></pre>\n<p>Extra options to override decorated parameters.</p>","isPage":true,"text":"\n{\n    apiUrl?: string | undefined;\n    cosmWasmClient?: CosmWasmClient | undefined;\n} | undefined\nExtra options to override decorated parameters.","title":"extra","titles":[null,null]},"29":{"href":"/hooks/account/public/parameter-common-snippet#accountid","html":"\n<p><code>AccountId | undefined</code></p>\n<p>Account Id to be used to fetch the query.</p>\n","isPage":true,"text":"\nAccountId | undefined\nAccount Id to be used to fetch the query.\n","title":"accountId","titles":[null,null]},"30":{"href":"/hooks/account/public/parameter-common-snippet#chainname","html":"\n<p><code>string | undefined</code></p>\n<p>Name of the chain to be used to fetch the query.</p>","isPage":false,"text":"\nstring | undefined\nName of the chain to be used to fetch the query.","title":"chainName","titles":[null,null]},"31":{"href":"/hooks/account/public/parameter-extra-snippet#extra","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>{</span></span>\n<span class=\"line\"><span>    apiUrl?: string | undefined;</span></span>\n<span class=\"line\"><span>    accountId?: AccountId | undefined;</span></span>\n<span class=\"line\"><span>    cosmWasmClient?: CosmWasmClient | undefined;</span></span>\n<span class=\"line\"><span>} | undefined</span></span></code></pre>\n<p>Extra options to override decorated parameters.</p>","isPage":true,"text":"\n{\n    apiUrl?: string | undefined;\n    accountId?: AccountId | undefined;\n    cosmWasmClient?: CosmWasmClient | undefined;\n} | undefined\nExtra options to override decorated parameters.","title":"extra","titles":[null,null]},"32":{"href":"/hooks/account/wallet/mutation-parameters-snippet#fee","html":"\n<p><code>number | StdFee | &#x27;auto&#x27;</code></p>\n<p>Transaction to fee to submit.</p>\n","isPage":true,"text":"\nnumber | StdFee | &#x27;auto&#x27;\nTransaction to fee to submit.\n","title":"fee","titles":[null,null]},"33":{"href":"/hooks/account/wallet/mutation-parameters-snippet#funds-optional","html":"\n<p><code>(Coin &amp; { [key: string]: string })[]</code></p>\n<p>Funds to submit.</p>\n","isPage":false,"text":"\n(Coin &amp; { [key: string]: string })[]\nFunds to submit.\n","title":"funds (optional)","titles":[null,null]},"34":{"href":"/hooks/account/wallet/mutation-parameters-snippet#memo-optional","html":"\n<p><code>string</code></p>\n<p>Memo to submit.</p>","isPage":false,"text":"\nstring\nMemo to submit.","title":"memo (optional)","titles":[null,null]},"35":{"href":"/hooks/account/wallet/parameter-common-snippet#accountid","html":"\n<p><code>AccountId | undefined</code></p>\n<p>Account Id to be used to fetch the query.</p>\n","isPage":true,"text":"\nAccountId | undefined\nAccount Id to be used to fetch the query.\n","title":"accountId","titles":[null,null]},"36":{"href":"/hooks/account/wallet/parameter-common-snippet#chainname","html":"\n<p><code>string | undefined</code></p>\n<p>Name of the chain to be used to fetch the query.</p>","isPage":false,"text":"\nstring | undefined\nName of the chain to be used to fetch the query.","title":"chainName","titles":[null,null]},"37":{"href":"/hooks/account/wallet/parameter-extra-snippet#extra","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>{</span></span>\n<span class=\"line\"><span>    apiUrl?: string | undefined;</span></span>\n<span class=\"line\"><span>    accountId?: AccountId | undefined;</span></span>\n<span class=\"line\"><span>    signingCosmWasmClient?: SigningCosmWasmClient | undefined;</span></span>\n<span class=\"line\"><span>    sender: string | undefined;</span></span>\n<span class=\"line\"><span>} | undefined</span></span></code></pre>\n<p>Extra options to override decorated parameters.</p>","isPage":true,"text":"\n{\n    apiUrl?: string | undefined;\n    accountId?: AccountId | undefined;\n    signingCosmWasmClient?: SigningCosmWasmClient | undefined;\n    sender: string | undefined;\n} | undefined\nExtra options to override decorated parameters.","title":"extra","titles":[null,null]},"38":{"href":"/react/providers/graz#graz-provider","html":"</header>\n<p>With <a href=\"https://graz.sh\">graz</a>, you only need to wrap <code>AbstractProvider</code> with its provider as it already uses react-query under the hood.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { GrazProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;graz&#x27;</span></span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { mainnetChains } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;graz/chains&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { createConfig, AbstractProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/react&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { grazProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/provider-graz&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  apiUrl: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;https://testnet.api.abstract.money/graphql&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  provider: grazProvider</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> App</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">GrazProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> grazOptions</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{ </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      chains: [mainnetChains.osmosis], </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      chainsConfig: { </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        [mainnetChains.osmosis.chainId]: { </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          gas: { </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            price: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0.25&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            denom: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;uosmo&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          }, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      }, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">AbstractProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#F47067\">        {</span><span style=\"color:#6A737D;--shiki-dark:#768390\">/*...*/</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">AbstractProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">GrazProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":true,"text":"\nWith graz, you only need to wrap AbstractProvider with its provider as it already uses react-query under the hood.\nimport { GrazProvider } from &#x27;graz&#x27;\nimport { mainnetChains } from &#x27;graz/chains&#x27;\nimport { createConfig, AbstractProvider } from &#x27;@abstract-money/react&#x27;\nimport { grazProvider } from &#x27;@abstract-money/provider-graz&#x27;\n \nconst config = createConfig({\n  apiUrl: &#x27;https://testnet.api.abstract.money/graphql&#x27;,\n  provider: grazProvider\n})\n \nexport function App() {\n  return (\n    &lt;GrazProvider grazOptions={{ \n      chains: [mainnetChains.osmosis], \n      chainsConfig: { \n        [mainnetChains.osmosis.chainId]: { \n          gas: { \n            price: &#x27;0.25&#x27;, \n            denom: &#x27;uosmo&#x27;, \n          }, \n        }, \n      }, \n    }}&gt;\n      &lt;AbstractProvider config={config}&gt;\n        {/*...*/}\n      &lt;/AbstractProvider&gt;\n    &lt;/GrazProvider&gt; \n  )\n}","title":"Graz Provider","titles":[]},"39":{"href":"/react/providers/xion#xion-provider","html":"<div role=\"doc-subtitle\">Using the XION Provider with React</div></header>\n<p>To use XION, simply wrap the <code>AbstractProvider</code> with the <code>AbstraxionProvider</code> and pass in its config object.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed has-focused\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { QueryClient, QueryClientProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@tanstack/react-query&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { AbstraxionProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;@burnt-labs/abstraxion&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { createConfig, AbstractProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/react&#x27;</span></span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { xionProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@abstract-money/provider-xion&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  apiUrl: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;https://xion.api.abstract.money/graphql&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  provider: xionProvider </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}) </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> QueryClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> YOUR_CONTRACT_ADDRESS</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;xion1...xyz&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line focused\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> ABSTRAXION_CONFIG</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  contracts: [ </span></span>\n<span class=\"line focused\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Usually, you would have a list of different contracts here</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    { </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      address: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">YOUR_CONTRACT_ADDRESS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      amounts: [{ denom: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;uxion&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, amount: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1000000&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }], </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  ], </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  bank: [ </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    { </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      denom: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;uxion&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      amount: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1000000&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  ], </span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}; </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> App</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">AbstraxionProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">ABSTRAXION_CONFIG</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">AbstractProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#F47067\">          {</span><span style=\"color:#6A737D;--shiki-dark:#768390\">/*...*/</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">AbstractProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line focused\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">AbstraxionProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":true,"text":"Using the XION Provider with React\nTo use XION, simply wrap the AbstractProvider with the AbstraxionProvider and pass in its config object.\nimport { QueryClient, QueryClientProvider } from &#x27;@tanstack/react-query&#x27;\nimport { AbstraxionProvider } from &quot;@burnt-labs/abstraxion&quot;;\nimport { createConfig, AbstractProvider } from &#x27;@abstract-money/react&#x27;\nimport { xionProvider } from &#x27;@abstract-money/provider-xion&#x27;\n \nconst config = createConfig({ \n  apiUrl: &#x27;https://xion.api.abstract.money/graphql&#x27;, \n  provider: xionProvider \n}) \n \nconst client = new QueryClient()\n \nconst YOUR_CONTRACT_ADDRESS = &#x27;xion1...xyz&#x27;; \n \nconst ABSTRAXION_CONFIG = { \n  contracts: [ \n    // Usually, you would have a list of different contracts here\n    { \n      address: YOUR_CONTRACT_ADDRESS, \n      amounts: [{ denom: &#x27;uxion&#x27;, amount: &quot;1000000&quot; }], \n    }, \n  ], \n  bank: [ \n    { \n      denom: &#x27;uxion&#x27;, \n      amount: &quot;1000000&quot;, \n    }, \n  ], \n}; \n \nexport function App() {\n  return (\n    &lt;AbstraxionProvider config={ABSTRAXION_CONFIG}&gt;\n      &lt;QueryClientProvider client={client}&gt;\n        &lt;AbstractProvider config={config}&gt;\n          {/*...*/}\n        &lt;/AbstractProvider&gt;\n      &lt;/QueryClientProvider&gt;\n    &lt;/AbstraxionProvider&gt; \n  )\n}","title":"XION Provider","titles":[]}},"dirtCount":0,"index":[["|",{"2":{"20":2,"21":1,"22":1,"23":1,"26":4,"27":1,"28":3,"29":1,"30":1,"31":4,"32":2,"35":1,"36":1,"37":5}}],["✔",{"2":{"16":5}}],["0",{"2":{"15":2,"24":1,"25":2,"38":1}}],["variable",{"2":{"24":1,"25":1}}],["vanillajs",{"2":{"17":2}}],["validating",{"2":{"16":2}}],["video",{"2":{"10":1}}],["versioncontrol",{"2":{"24":3,"25":1}}],["versions",{"2":{"6":1}}],["version",{"2":{"6":1,"15":1,"24":1}}],["`",{"2":{"8":2}}],["http",{"2":{"25":1}}],["https",{"2":{"4":1,"5":1,"6":1,"7":1,"15":1,"19":1,"24":1,"25":1,"38":1,"39":1}}],["here",{"2":{"24":1,"39":1}}],["hood",{"2":{"38":1}}],["hooks",{"0":{"8":1},"2":{"8":1,"15":1}}],["how",{"2":{"24":2}}],["hardly",{"2":{"12":1}}],["have",{"2":{"12":1,"15":2,"24":1,"39":1}}],["high",{"2":{"10":1}}],["5",{"0":{"8":1}}],["key",{"2":{"33":1}}],["key=",{"2":{"8":1}}],["keplr",{"2":{"7":1}}],["keplrwallets",{"2":{"7":2}}],["kit",{"2":{"7":3}}],["4001",{"2":{"24":2,"25":7}}],["4",{"0":{"7":1}}],["4th",{"2":{"6":1}}],["yet",{"2":{"6":1}}],["your",{"0":{"4":1,"7":1},"2":{"4":1,"5":1,"6":1,"7":1,"12":1,"15":2,"16":1,"17":1,"25":1,"39":2}}],["you",{"2":{"1":1,"5":1,"6":2,"7":3,"12":1,"15":4,"16":4,"17":2,"24":2,"38":1,"39":1}}],["mutationoptions",{"2":{"21":2}}],["mutation",{"0":{"21":1}}],["memo",{"0":{"34":1},"2":{"34":1}}],["mentioned",{"2":{"16":1}}],["medium",{"2":{"11":1}}],["machine",{"2":{"25":1}}],["mainnetchains",{"2":{"38":3}}],["mainnet",{"2":{"15":1}}],["manner",{"2":{"10":1}}],["maps",{"2":{"25":1}}],["map=",{"2":{"24":1,"25":2}}],["map",{"2":{"8":1}}],["major",{"2":{"6":1}}],["money",{"0":{"12":1,"17":1},"1":{"13":1,"14":1,"15":1,"16":1,"18":1,"19":1},"2":{"2":24,"4":3,"5":3,"6":3,"7":3,"8":2,"13":4,"15":2,"18":4,"19":2,"38":3,"39":3}}],["more",{"2":{"1":1,"6":1}}],["modules",{"2":{"1":1}}],["^4bun",{"2":{"6":1}}],["^4pnpm",{"2":{"6":1}}],["^4yarn",{"2":{"6":1}}],["^4",{"2":{"6":2}}],["quot",{"2":{"7":6,"24":20,"25":10,"39":6}}],["queryoptions",{"2":{"23":2}}],["queryclientprovider",{"2":{"6":4,"7":3,"39":3}}],["queryclient",{"2":{"6":4,"7":2,"39":2}}],["query",{"0":{"6":1,"23":1},"2":{"6":8,"7":1,"8":1,"22":1,"27":1,"29":1,"30":1,"35":1,"36":1,"38":1,"39":1}}],["quick",{"0":{"3":1},"1":{"4":1,"5":1,"6":1,"7":1,"8":1}}],["3",{"0":{"6":1}}],["25",{"2":{"38":1}}],["2",{"0":{"5":1}}],["=",{"2":{"4":1,"5":1,"6":2,"7":2,"8":4,"19":2,"38":1,"39":4}}],["xyz",{"2":{"39":1}}],["x27",{"0":{"7":1},"2":{"4":6,"5":6,"6":8,"7":8,"8":6,"15":12,"16":1,"17":1,"19":8,"24":3,"25":4,"32":2,"38":14,"39":14}}],["xion1",{"2":{"39":1}}],["xionprovider",{"2":{"39":2}}],["xionpnpm",{"2":{"2":1}}],["xionbun",{"2":{"2":1}}],["xionyarn",{"2":{"2":1}}],["xion",{"0":{"39":1},"2":{"2":2,"7":1,"39":4}}],["uxion",{"2":{"39":2}}],["uosmo",{"2":{"38":1}}],["under",{"2":{"38":1}}],["undefined",{"2":{"20":2,"21":1,"22":1,"23":1,"26":4,"27":1,"28":3,"29":1,"30":1,"31":4,"35":1,"36":1,"37":5}}],["url",{"2":{"24":1}}],["usually",{"2":{"39":1}}],["usage",{"0":{"14":1,"19":1}}],["used",{"2":{"22":1,"27":1,"29":1,"30":1,"35":1,"36":1}}],["useaccounts",{"2":{"8":2}}],["use",{"0":{"8":1},"2":{"8":1,"12":1,"15":1,"16":2,"17":1,"21":1,"23":1,"24":2,"25":1,"39":1}}],["uses",{"2":{"6":1,"38":1}}],["using",{"2":{"2":3,"6":1,"7":1,"15":1,"24":1,"39":1}}],["up",{"0":{"4":1},"2":{"4":1,"8":1}}],["1000000",{"2":{"39":2}}],["19",{"2":{"24":1,"25":2}}],["1",{"0":{"4":1},"2":{"15":1,"24":2,"25":2}}],["gas",{"2":{"38":1}}],["guide",{"2":{"24":1}}],["github",{"2":{"11":1,"15":1}}],["generated",{"2":{"15":2,"16":2}}],["generate",{"0":{"16":1},"2":{"12":1,"15":3,"16":3}}],["generating",{"2":{"12":1}}],["general",{"0":{"10":1}}],["getaccountsbyownerfromapi",{"2":{"19":1}}],["get",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"2":{"0":1,"15":1,"16":1}}],["gt",{"2":{"5":2,"6":4,"7":6,"8":7,"14":1,"24":1,"38":4,"39":6}}],["graphql",{"2":{"4":1,"5":1,"6":1,"7":1,"38":1,"39":1}}],["grazoptions=",{"2":{"38":1}}],["grazprovider",{"2":{"4":2,"5":2,"38":5}}],["grazpnpm",{"2":{"2":1}}],["grazbun",{"2":{"2":1}}],["grazyarn",{"2":{"2":1}}],["graz",{"0":{"38":1},"2":{"2":2,"4":1,"5":1,"6":3,"7":1,"38":4}}],["rpc",{"2":{"24":6,"25":3}}],["run",{"2":{"24":2,"25":2}}],["running",{"0":{"24":1},"1":{"25":1},"2":{"16":1,"25":1}}],["rule",{"2":{"12":1}}],["root",{"2":{"15":1}}],["resolving",{"2":{"16":1}}],["re",{"2":{"16":1,"17":1}}],["registry",{"2":{"15":3}}],["ready",{"2":{"16":1}}],["read",{"2":{"10":1}}],["react",{"2":{"2":12,"4":1,"5":2,"6":8,"7":3,"8":2,"15":3,"17":2,"38":2,"39":3}}],["required",{"2":{"6":1}}],["relies",{"2":{"6":1,"12":1}}],["return",{"2":{"5":1,"6":1,"7":1,"8":3,"38":1,"39":1}}],["rationale",{"2":{"1":1}}],["number",{"2":{"32":1}}],["namespace",{"2":{"15":2}}],["name",{"2":{"15":3,"22":1,"27":1,"30":1,"36":1}}],["node",{"2":{"17":1}}],["now",{"2":{"8":1}}],["not",{"2":{"6":1,"17":1}}],["need",{"2":{"38":1}}],["network",{"2":{"24":6,"25":4}}],["new",{"2":{"6":2,"7":1,"39":1}}],["next",{"2":{"6":1,"7":1}}],["necessary",{"2":{"1":1}}],["npm",{"2":{"2":3,"6":1,"13":1,"18":1}}],["bank",{"2":{"39":1}}],["based",{"2":{"10":1}}],["be",{"2":{"16":1,"22":1,"25":2,"27":1,"29":1,"30":1,"35":1,"36":1}}],["behind",{"2":{"1":1}}],["bindings",{"2":{"12":1}}],["burnt",{"2":{"39":1}}],["build",{"2":{"10":1}}],["bundle",{"2":{"1":2}}],["custom",{"2":{"24":1}}],["claim",{"2":{"15":1}}],["clibun",{"2":{"13":1}}],["clipnpm",{"2":{"13":1}}],["cliyarn",{"2":{"13":1}}],["cli",{"0":{"12":1},"1":{"13":1,"14":1,"15":1,"16":1},"2":{"6":1,"12":2,"13":1,"15":4}}],["client=",{"2":{"6":1,"7":1,"39":1}}],["client",{"0":{"4":1},"2":{"6":3,"7":2,"19":2,"39":2}}],["chainid",{"2":{"24":2,"38":1}}],["chainname",{"0":{"22":1,"27":1,"30":1,"36":1}}],["chain",{"2":{"10":1,"22":1,"24":1,"27":1,"30":1,"36":1}}],["chainsconfig",{"2":{"38":1}}],["chains",{"2":{"8":1,"19":1,"38":2}}],["chains=",{"2":{"7":1}}],["chainprovider",{"2":{"7":4}}],["check",{"2":{"6":1,"10":1}}],["createapiclient",{"2":{"19":2}}],["create",{"2":{"17":1}}],["created",{"2":{"5":1}}],["createconfig",{"2":{"4":2,"5":2,"6":2,"7":2,"38":2,"39":2}}],["can",{"2":{"1":1,"6":1,"8":1,"15":2,"16":1}}],["coin",{"2":{"33":1}}],["cosmwasmclient",{"2":{"28":2,"31":2}}],["cosmoshub",{"2":{"7":1}}],["cosmos",{"2":{"7":3}}],["cosmoskitprovider",{"2":{"6":2,"7":2}}],["cosmoskitpnpm",{"2":{"2":1}}],["cosmoskitbun",{"2":{"2":1}}],["cosmoskityarn",{"2":{"2":1}}],["cosmoskit",{"2":{"2":2,"6":1,"7":1}}],["com",{"2":{"15":1}}],["command",{"2":{"12":2,"14":1,"15":1,"24":1,"25":3}}],["component",{"2":{"8":1}}],["composable",{"2":{"1":1}}],["comprehensive",{"2":{"1":1}}],["corebun",{"2":{"18":1}}],["corepnpm",{"2":{"18":1}}],["coreyarn",{"2":{"18":1}}],["core",{"0":{"17":1},"1":{"18":1,"19":1},"2":{"8":1,"17":1,"18":1,"19":1}}],["console",{"2":{"11":1,"19":1}}],["const",{"2":{"4":1,"5":1,"6":2,"7":2,"8":2,"19":2,"38":1,"39":4}}],["container",{"2":{"25":1}}],["control",{"2":{"24":1}}],["contracts",{"2":{"12":1,"15":1,"16":2,"39":2}}],["contract",{"2":{"10":1,"11":1,"15":1,"24":1,"39":2}}],["contexts",{"2":{"7":1}}],["context",{"0":{"7":1},"2":{"5":1,"7":1}}],["configuration",{"2":{"24":3,"25":4}}],["configurations",{"2":{"24":1}}],["configure",{"2":{"15":1,"24":1}}],["config=",{"2":{"5":1,"6":1,"7":1,"38":1,"39":2}}],["config",{"0":{"4":1,"5":1},"2":{"4":2,"5":4,"6":2,"7":2,"15":3,"38":2,"39":5}}],["codebase",{"2":{"16":1}}],["codegen",{"2":{"6":1,"12":1}}],["code",{"2":{"0":1,"16":1}}],["would",{"2":{"25":1,"39":1}}],["workers",{"2":{"24":1,"25":1}}],["writing",{"2":{"16":1}}],["wrap",{"0":{"7":1},"2":{"5":1,"6":1,"7":2,"38":1,"39":1}}],["willing",{"2":{"17":1}}],["will",{"2":{"12":1,"15":1,"24":1,"25":1}}],["with",{"0":{"7":1},"2":{"0":2,"1":1,"4":1,"6":2,"7":2,"15":1,"17":3,"24":2,"25":1,"38":2,"39":2}}],["website",{"2":{"11":1}}],["watch",{"2":{"10":1}}],["want",{"2":{"10":1}}],["wallets=",{"2":{"7":1}}],["wallets",{"2":{"7":1}}],["which",{"2":{"6":1,"24":1}}],["why",{"0":{"9":1},"1":{"10":1,"11":1},"2":{"1":1}}],["when",{"2":{"1":1}}],["e",{"2":{"24":1,"25":2}}],["environment",{"2":{"24":1,"25":1}}],["endpoint",{"2":{"24":1}}],["encoding",{"2":{"1":1}}],["error",{"2":{"8":1}}],["every",{"2":{"8":1}}],["everything",{"2":{"8":1}}],["extra",{"0":{"20":1,"26":1,"28":1,"31":1,"37":1},"2":{"20":1,"26":1,"28":1,"31":1,"37":1}}],["examples",{"2":{"7":1}}],["example",{"0":{"25":1},"2":{"6":1,"7":1,"24":1,"25":1}}],["export",{"2":{"5":1,"6":1,"7":1,"8":1,"15":1,"38":1,"39":1}}],["experience",{"2":{"1":2}}],["earlier",{"2":{"5":1}}],["done",{"2":{"16":1}}],["docker",{"2":{"24":3,"25":3}}],["docs",{"2":{"6":1}}],["documentation",{"2":{"1":1,"11":1}}],["different",{"2":{"39":1}}],["directly",{"2":{"16":1}}],["directory",{"2":{"15":1}}],["distribution",{"2":{"10":1}}],["dr",{"2":{"10":1}}],["data",{"2":{"8":1}}],["denom",{"2":{"38":1,"39":2}}],["dev",{"2":{"24":1,"25":1}}],["development",{"2":{"10":1}}],["developers",{"2":{"10":1}}],["developer",{"2":{"1":2}}],["deployed",{"2":{"24":1}}],["describes",{"2":{"24":1}}],["desired",{"2":{"4":1}}],["decorated",{"2":{"20":1,"26":1,"28":1,"31":1,"37":1}}],["defineconfig",{"2":{"15":2}}],["define",{"2":{"15":1}}],["default",{"2":{"8":1,"15":2}}],["defaultmodalviews",{"2":{"7":1}}],["port",{"2":{"25":2}}],["phoenix",{"2":{"24":2,"25":2}}],["pull",{"2":{"15":1}}],["placeholder",{"2":{"24":1}}],["plan",{"2":{"24":1}}],["platform",{"2":{"10":3}}],["please",{"2":{"15":1}}],["plugins",{"2":{"15":3,"16":2}}],["p",{"2":{"8":2,"24":1,"25":2}}],["parameters",{"2":{"20":1,"26":1,"28":1,"31":1,"37":1}}],["parsing",{"2":{"1":1}}],["package",{"2":{"12":1,"17":1}}],["page",{"2":{"8":1}}],["passes",{"2":{"25":1}}],["pass",{"2":{"5":1,"6":1,"24":1,"39":1}}],["performance",{"2":{"1":2}}],["price",{"2":{"38":1}}],["primitives",{"2":{"1":1}}],["prepared",{"2":{"24":2}}],["prepare",{"2":{"24":1}}],["prefer",{"2":{"10":1}}],["proxy",{"2":{"24":1,"25":1}}],["properties",{"2":{"24":1}}],["property",{"2":{"5":1,"6":1}}],["provided",{"2":{"25":1}}],["provide",{"0":{"5":1}}],["providers",{"2":{"8":1}}],["provider",{"0":{"4":1,"5":1,"7":1,"38":1,"39":1},"2":{"2":12,"4":3,"5":3,"6":2,"7":5,"38":3,"39":3}}],["provides",{"2":{"1":1,"6":1}}],["project",{"2":{"1":1,"12":1,"15":1}}],["labs",{"2":{"39":1}}],["localhost",{"2":{"25":1}}],["local",{"2":{"25":1}}],["log",{"2":{"19":1}}],["loading",{"2":{"8":1}}],["low",{"2":{"1":1}}],["lt",{"2":{"5":2,"6":4,"7":6,"8":6,"14":1,"24":1,"38":4,"39":6}}],["learn",{"2":{"1":1,"6":1}}],["level",{"2":{"1":1,"10":1}}],["like",{"2":{"16":1}}],["list",{"2":{"15":1,"39":1}}],["line",{"2":{"12":1}}],["lines",{"2":{"0":1}}],["links",{"0":{"11":1}}],["library",{"2":{"6":1,"10":1,"17":3}}],["lightweight",{"2":{"1":1}}],["transaction",{"2":{"32":1}}],["tree",{"2":{"1":1}}],["terra1hstp8gfjlg2reet90mgada3h8n9jf2d7tnd9r554h0d0q95lgq5q2fhp8v",{"2":{"24":1,"25":1}}],["team",{"2":{"15":1}}],["testnet",{"2":{"5":1,"6":1,"7":1,"38":1}}],["typings",{"2":{"12":1}}],["types",{"2":{"16":1}}],["typescript",{"2":{"1":1,"12":1}}],["type",{"2":{"1":1}}],["tl",{"2":{"10":1}}],["tsconfig",{"2":{"12":1}}],["ts",{"2":{"6":1,"12":1,"15":2,"16":1}}],["target",{"2":{"15":1}}],["tanstack",{"0":{"6":1},"2":{"6":8,"7":1,"8":1,"39":1}}],["tasks",{"2":{"1":1}}],["top",{"2":{"17":1}}],["touch",{"2":{"15":1}}],["too",{"2":{"12":1}}],["tool",{"2":{"12":1}}],["tooling",{"2":{"10":1}}],["to",{"0":{"5":1},"2":{"5":1,"6":3,"10":2,"12":2,"15":3,"16":3,"17":3,"20":1,"21":1,"22":2,"23":1,"24":4,"25":3,"26":1,"27":2,"28":1,"29":2,"30":2,"31":1,"32":2,"33":1,"34":1,"35":2,"36":2,"37":1,"38":1,"39":1}}],["this",{"2":{"6":1,"15":1,"24":2,"25":2}}],["them",{"2":{"12":1}}],["their",{"2":{"10":1}}],["these",{"2":{"7":1}}],["the",{"0":{"5":1},"2":{"1":3,"5":3,"6":7,"7":2,"8":1,"10":1,"12":2,"15":3,"16":2,"17":1,"22":2,"24":13,"25":7,"27":2,"29":1,"30":2,"35":1,"36":2,"38":1,"39":3}}],["that",{"2":{"1":1,"8":1,"12":1,"24":1}}],["funds",{"0":{"33":1},"2":{"33":1}}],["function",{"2":{"5":1,"6":1,"7":1,"8":1,"38":1,"39":1}}],["fee",{"0":{"32":1},"2":{"32":1}}],["fetch",{"2":{"22":1,"27":1,"29":1,"30":1,"35":1,"36":1}}],["few",{"2":{"0":1}}],["first",{"2":{"24":1}}],["firstly",{"2":{"4":1}}],["files",{"2":{"15":1}}],["from",{"2":{"4":2,"5":2,"6":3,"7":5,"8":2,"15":3,"19":1,"38":4,"39":4}}],["following",{"2":{"24":2}}],["follow",{"2":{"24":1}}],["focused",{"2":{"1":1}}],["for",{"2":{"1":2,"7":1,"12":1,"15":1,"17":2,"24":2}}],["image",{"2":{"25":1}}],["import",{"2":{"4":2,"5":2,"6":3,"7":5,"8":2,"15":2,"19":1,"38":4,"39":4}}],["id",{"2":{"24":1,"29":1,"35":1}}],["its",{"2":{"38":1,"39":1}}],["it",{"2":{"6":1,"12":1,"17":2,"24":2,"38":1}}],["if",{"2":{"6":1,"7":1,"8":2,"12":1,"17":1}}],["i",{"2":{"2":3,"6":1,"8":2,"13":1,"18":1}}],["include",{"2":{"24":1}}],["into",{"2":{"16":1}}],["interact",{"2":{"17":1}}],["interacting",{"2":{"1":1,"17":2}}],["interface",{"2":{"1":1}}],["index",{"2":{"16":1}}],["init",{"0":{"15":1},"2":{"15":1}}],["inside",{"2":{"8":1}}],["installed",{"2":{"15":1}}],["install",{"2":{"6":2}}],["installation",{"0":{"2":1,"13":1,"18":1}}],["instance",{"2":{"6":2,"24":2}}],["in",{"2":{"1":1,"5":1,"10":1,"12":1,"15":2,"17":1,"25":2,"39":1}}],["inference",{"2":{"1":1}}],["iserror",{"2":{"8":1}}],["isloading",{"2":{"8":1}}],["is",{"2":{"1":2,"6":1,"8":1,"10":1,"12":1,"17":1,"24":1}}],["javascript",{"2":{"12":1}}],["json",{"2":{"12":1,"24":1}}],["js",{"0":{"8":1,"9":1},"1":{"10":1,"11":1},"2":{"1":3,"17":1}}],["just",{"2":{"0":1}}],["object",{"2":{"39":1}}],["os",{"2":{"24":1,"25":1}}],["osmosis",{"2":{"8":1,"19":1,"38":2}}],["override",{"2":{"20":1,"26":1,"28":1,"31":1,"37":1}}],["overview",{"0":{"1":1},"2":{"10":1}}],["own",{"2":{"17":1}}],["owner",{"2":{"8":2,"19":1}}],["or",{"2":{"17":1}}],["optional",{"0":{"33":1,"34":1}}],["options",{"2":{"14":1,"16":1,"20":1,"26":1,"28":1,"31":1,"37":1}}],["optimized",{"2":{"1":1}}],["our",{"2":{"10":2,"17":1}}],["output",{"2":{"16":1}}],["out",{"2":{"6":1,"10":1,"15":1}}],["outside",{"2":{"6":1}}],["other",{"2":{"6":1,"7":1}}],["once",{"2":{"15":1,"16":1,"24":1}}],["one",{"2":{"12":1,"15":1}}],["only",{"2":{"1":1,"6":1,"38":1}}],["on",{"2":{"1":1,"6":1,"10":1,"12":1,"15":1,"17":1,"24":1,"25":1}}],["of",{"2":{"0":1,"6":1,"15":1,"17":1,"22":1,"24":2,"27":1,"30":1,"36":1,"39":1}}],["amount",{"2":{"39":2}}],["amounts",{"2":{"39":1}}],["amp",{"0":{"4":1},"2":{"33":1}}],["auto",{"2":{"32":1}}],["automatic",{"2":{"1":1}}],["after",{"2":{"25":1}}],["accessible",{"2":{"25":1}}],["accordingly",{"2":{"15":1}}],["accountid",{"0":{"29":1,"35":1},"2":{"29":1,"31":2,"35":1,"37":2}}],["accountidtostring",{"2":{"8":2}}],["accounts",{"2":{"19":2}}],["accountsquery",{"2":{"8":4}}],["account",{"2":{"8":2,"10":1,"11":1,"29":1,"35":1}}],["actual",{"2":{"24":1}}],["await",{"2":{"19":1}}],["at",{"2":{"15":2,"25":1}}],["agnostic",{"2":{"10":1}}],["all",{"2":{"12":1,"16":1}}],["allows",{"2":{"17":1}}],["allow",{"2":{"10":1}}],["already",{"2":{"6":1,"38":1}}],["an",{"2":{"10":1,"15":1,"16":1,"24":1,"25":1}}],["and",{"2":{"1":2,"5":1,"6":2,"8":1,"10":3,"16":1,"24":1,"25":1,"39":1}}],["args",{"2":{"8":1}}],["are",{"2":{"6":2,"7":1}}],["as",{"2":{"6":2,"7":1,"16":1,"24":1,"25":1,"38":1}}],["async",{"2":{"1":1}}],["address",{"2":{"24":1,"39":3}}],["additional",{"2":{"16":1}}],["add",{"2":{"2":9,"6":3,"13":3,"18":3}}],["above",{"2":{"16":1,"25":1}}],["about",{"2":{"1":1,"6":1}}],["abstraxionprovider",{"2":{"39":4}}],["abstraxion",{"2":{"2":1,"39":3}}],["abstractsdk",{"2":{"15":1,"24":1,"25":2}}],["abstractprovider",{"2":{"5":4,"6":6,"7":4,"38":4,"39":4}}],["abstract",{"0":{"4":1,"5":2,"8":1,"9":1,"12":1,"17":1,"24":1},"1":{"10":1,"11":1,"13":1,"14":1,"15":1,"16":1,"18":1,"19":1,"25":1},"2":{"0":1,"1":5,"2":24,"4":4,"5":3,"6":3,"7":3,"8":4,"10":2,"11":1,"12":2,"13":4,"14":1,"15":7,"16":2,"17":4,"18":4,"19":2,"24":2,"25":1,"38":3,"39":3}}],["applications",{"2":{"10":1}}],["app",{"2":{"5":2,"6":1,"7":1,"15":2,"38":1,"39":1}}],["apps",{"2":{"1":1,"17":3}}],["api",{"0":{"24":1},"1":{"25":1},"2":{"4":1,"5":1,"6":1,"7":1,"19":1,"24":2,"25":2,"38":1,"39":1}}],["apiurl",{"2":{"4":1,"5":1,"6":1,"7":1,"19":1,"20":1,"26":1,"28":1,"31":1,"37":1,"38":1,"39":1}}],["apis",{"2":{"1":1,"6":1}}],["a",{"2":{"0":1,"1":1,"4":1,"6":2,"10":3,"12":1,"15":2,"17":1,"24":1,"39":1}}],["specifies",{"2":{"25":1}}],["specific",{"2":{"7":1}}],["submit",{"2":{"32":1,"33":1,"34":1}}],["subgraph",{"2":{"24":1,"25":2}}],["supported",{"2":{"6":1}}],["schema",{"2":{"24":1}}],["schemas",{"2":{"15":2}}],["scale",{"2":{"10":1}}],["src",{"2":{"15":1,"16":1}}],["smart",{"2":{"10":1,"11":1}}],["should",{"2":{"7":2,"16":2,"24":1}}],["shakable",{"2":{"1":1}}],["s",{"0":{"7":1},"2":{"24":1}}],["simply",{"2":{"39":1}}],["signingcosmwasmclient",{"2":{"26":2,"37":2}}],["since",{"2":{"6":1}}],["size",{"2":{"1":2}}],["stdfee",{"2":{"32":1}}],["string",{"2":{"20":1,"22":1,"24":2,"26":2,"27":1,"28":1,"30":1,"31":1,"33":2,"34":1,"36":1,"37":2}}],["step",{"2":{"6":1}}],["start",{"0":{"3":1},"1":{"4":1,"5":1,"6":1,"7":1,"8":1}}],["started",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"2":{"0":1}}],["stateless",{"2":{"1":1}}],["skip",{"2":{"6":1}}],["sender",{"2":{"26":1,"37":1}}],["served",{"2":{"25":1}}],["see",{"2":{"6":1}}],["settings",{"2":{"24":1}}],["setup",{"0":{"6":1}}],["set",{"0":{"4":1},"2":{"4":1,"8":1,"16":1}}],["section",{"2":{"1":1}}],["safety",{"2":{"1":1}}],["sdk",{"2":{"0":1,"11":1}}]],"serializationVersion":2}
